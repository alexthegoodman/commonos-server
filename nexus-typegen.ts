/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { core } from "nexus"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
     */
    json<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "JSON";
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    date<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "DateTime";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
     */
    json<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "JSON";
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    date<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateTime";
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
  JSON: any
}

export interface NexusGenObjects {
  Company: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    fields?: NexusGenScalars['JSON'] | null; // JSON
    id?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  CompanySettings: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    fields?: NexusGenScalars['JSON'] | null; // JSON
    id?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  Contact: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    fields?: NexusGenScalars['JSON'] | null; // JSON
    id?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  ContactSettings: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    fields?: NexusGenScalars['JSON'] | null; // JSON
    id?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  ContentDevelopersSettings: { // root type
    apiKey?: string | null; // String
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    id?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  Dashboard: { // root type
    context?: NexusGenScalars['JSON'] | null; // JSON
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    id?: string | null; // String
    title?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  Document: { // root type
    content?: NexusGenScalars['JSON'] | null; // JSON
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    html?: string | null; // String
    id?: string | null; // String
    markdown?: string | null; // String
    messages?: NexusGenScalars['JSON'] | null; // JSON
    plaintext?: string | null; // String
    title?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  DomainSettings: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    dkimData?: NexusGenScalars['JSON'] | null; // JSON
    domainName?: string | null; // String
    id?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  Drawing: { // root type
    context?: NexusGenScalars['JSON'] | null; // JSON
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    id?: string | null; // String
    title?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  Email: { // root type
    archived?: boolean | null; // Boolean
    body?: string | null; // String
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    draft?: boolean | null; // Boolean
    from?: string | null; // String
    id?: string | null; // String
    initialMarkdown?: string | null; // String
    subject?: string | null; // String
    to?: string | null; // String
    unread?: boolean | null; // Boolean
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  EmailLog: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    from?: string | null; // String
    id?: string | null; // String
    to?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  EmailTemplate: { // root type
    context?: NexusGenScalars['JSON'] | null; // JSON
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    id?: string | null; // String
    title?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  Feed: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    id?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    url?: string | null; // String
  }
  Flow: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    id?: string | null; // String
    prompt?: string | null; // String
    questionsContext?: NexusGenScalars['JSON'] | null; // JSON
    resultsContext?: NexusGenScalars['JSON'] | null; // JSON
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  Funnel: { // root type
    context?: NexusGenScalars['JSON'] | null; // JSON
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    id?: string | null; // String
    title?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  Inbox: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    id?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    username?: string | null; // String
  }
  Link: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    description?: string | null; // String
    title?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    url?: string | null; // String
  }
  Mutation: {};
  Organization: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    id?: string | null; // String
    name?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  Post: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    fields?: NexusGenScalars['JSON'] | null; // JSON
    id?: string | null; // String
    markdown?: string | null; // String
    published?: boolean | null; // Boolean
    title?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  PostType: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    fields?: NexusGenScalars['JSON'] | null; // JSON
    id?: string | null; // String
    name?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  Presentation: { // root type
    context?: NexusGenScalars['JSON'] | null; // JSON
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    id?: string | null; // String
    title?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  PresentationTemplate: { // root type
    context?: NexusGenScalars['JSON'] | null; // JSON
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    id?: string | null; // String
    key?: string | null; // String
    sourceId?: string | null; // String
    title?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  Project: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    id?: string | null; // String
    title?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  Query: {};
  Sheet: { // root type
    context?: NexusGenScalars['JSON'] | null; // JSON
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    id?: string | null; // String
    title?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  Sound: { // root type
    context?: NexusGenScalars['JSON'] | null; // JSON
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    id?: string | null; // String
    title?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  Thread: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    id?: string | null; // String
    subject?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  Type: { // root type
    code?: string | null; // String
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    id?: string | null; // String
    name?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  User: { // root type
    algoliaApiKey?: string | null; // String
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    documentTree?: NexusGenScalars['JSON'] | null; // JSON
    drawingFiles?: NexusGenScalars['JSON'] | null; // JSON
    email?: string | null; // String
    feedTree?: NexusGenScalars['JSON'] | null; // JSON
    frequency?: string | null; // String
    lastTokenReset?: NexusGenScalars['DateTime'] | null; // DateTime
    periodTokenUsage?: number | null; // Int
    presentationFiles?: NexusGenScalars['JSON'] | null; // JSON
    role?: string | null; // String
    sheetFiles?: NexusGenScalars['JSON'] | null; // JSON
    soundFiles?: NexusGenScalars['JSON'] | null; // JSON
    subscription?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    videoFiles?: NexusGenScalars['JSON'] | null; // JSON
  }
  Video: { // root type
    context?: NexusGenScalars['JSON'] | null; // JSON
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    id?: string | null; // String
    title?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  WorkEmailFolder: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    id?: string | null; // String
    name?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  WorkEmailTemplate: { // root type
    body?: string | null; // String
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    id?: string | null; // String
    initialMarkdown?: string | null; // String
    subject?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  Company: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    creator: NexusGenRootTypes['User'] | null; // User
    fields: NexusGenScalars['JSON'] | null; // JSON
    id: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  CompanySettings: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    fields: NexusGenScalars['JSON'] | null; // JSON
    id: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    user: NexusGenRootTypes['User'] | null; // User
  }
  Contact: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    creator: NexusGenRootTypes['User'] | null; // User
    fields: NexusGenScalars['JSON'] | null; // JSON
    id: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  ContactSettings: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    fields: NexusGenScalars['JSON'] | null; // JSON
    id: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    user: NexusGenRootTypes['User'] | null; // User
  }
  ContentDevelopersSettings: { // field return type
    apiKey: string | null; // String
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    id: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    user: NexusGenRootTypes['User'] | null; // User
  }
  Dashboard: { // field return type
    context: NexusGenScalars['JSON'] | null; // JSON
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    creator: NexusGenRootTypes['User'] | null; // User
    id: string | null; // String
    title: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  Document: { // field return type
    content: NexusGenScalars['JSON'] | null; // JSON
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    creator: NexusGenRootTypes['User'] | null; // User
    html: string | null; // String
    id: string | null; // String
    markdown: string | null; // String
    messages: NexusGenScalars['JSON'] | null; // JSON
    plaintext: string | null; // String
    title: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  DomainSettings: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    dkimData: NexusGenScalars['JSON'] | null; // JSON
    domainName: string | null; // String
    id: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    user: NexusGenRootTypes['User'] | null; // User
  }
  Drawing: { // field return type
    context: NexusGenScalars['JSON'] | null; // JSON
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    creator: NexusGenRootTypes['User'] | null; // User
    id: string | null; // String
    title: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  Email: { // field return type
    archived: boolean | null; // Boolean
    body: string | null; // String
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    draft: boolean | null; // Boolean
    from: string | null; // String
    id: string | null; // String
    initialMarkdown: string | null; // String
    subject: string | null; // String
    thread: NexusGenRootTypes['Thread'] | null; // Thread
    to: string | null; // String
    unread: boolean | null; // Boolean
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  EmailLog: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    from: string | null; // String
    id: string | null; // String
    sender: NexusGenRootTypes['User'] | null; // User
    template: NexusGenRootTypes['User'] | null; // User
    to: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  EmailTemplate: { // field return type
    context: NexusGenScalars['JSON'] | null; // JSON
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    creator: NexusGenRootTypes['User'] | null; // User
    id: string | null; // String
    logs: Array<NexusGenRootTypes['User'] | null> | null; // [User]
    title: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  Feed: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    creator: NexusGenRootTypes['User'] | null; // User
    id: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    url: string | null; // String
  }
  Flow: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    id: string | null; // String
    prompt: string | null; // String
    questionsContext: NexusGenScalars['JSON'] | null; // JSON
    resultsContext: NexusGenScalars['JSON'] | null; // JSON
    type: NexusGenRootTypes['Type'] | null; // Type
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  Funnel: { // field return type
    context: NexusGenScalars['JSON'] | null; // JSON
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    creator: NexusGenRootTypes['User'] | null; // User
    id: string | null; // String
    title: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  Inbox: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    domain: NexusGenRootTypes['DomainSettings'] | null; // DomainSettings
    id: string | null; // String
    threads: Array<NexusGenRootTypes['Thread'] | null> | null; // [Thread]
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    username: string | null; // String
  }
  Link: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    description: string | null; // String
    title: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    url: string | null; // String
  }
  Mutation: { // field return type
    createCompany: NexusGenRootTypes['Company'] | null; // Company
    createContact: NexusGenRootTypes['Contact'] | null; // Contact
    createDashboard: NexusGenRootTypes['Dashboard'] | null; // Dashboard
    createEmailTemplate: NexusGenRootTypes['EmailTemplate'] | null; // EmailTemplate
    createFile: string | null; // String
    createFlow: NexusGenRootTypes['Flow'] | null; // Flow
    createFunnel: NexusGenRootTypes['Funnel'] | null; // Funnel
    createInbox: NexusGenRootTypes['Inbox'] | null; // Inbox
    createOrganization: NexusGenRootTypes['Organization'] | null; // Organization
    createPost: NexusGenRootTypes['Post'] | null; // Post
    createPostType: NexusGenRootTypes['PostType'] | null; // PostType
    createProject: NexusGenRootTypes['Project'] | null; // Project
    createWorkEmailFolder: NexusGenRootTypes['WorkEmailFolder'] | null; // WorkEmailFolder
    deleteCompany: string | null; // String
    deleteContact: string | null; // String
    deleteDocument: string | null; // String
    deleteDomainSettings: string | null; // String
    deleteEmailTemplate: string | null; // String
    deletePost: string | null; // String
    export: string | null; // String
    generateContentApiKey: NexusGenRootTypes['ContentDevelopersSettings'] | null; // ContentDevelopersSettings
    generateTitles: Array<NexusGenRootTypes['Document'] | null> | null; // [Document]
    markAsRead: NexusGenRootTypes['Email'] | null; // Email
    newCheckout: string | null; // String
    newDocument: NexusGenRootTypes['Document'] | null; // Document
    newDrawing: NexusGenRootTypes['Drawing'] | null; // Drawing
    newFeed: NexusGenRootTypes['Feed'] | null; // Feed
    newPresentation: NexusGenRootTypes['Presentation'] | null; // Presentation
    newPresentationTemplate: NexusGenRootTypes['PresentationTemplate'] | null; // PresentationTemplate
    newSheet: NexusGenRootTypes['Sheet'] | null; // Sheet
    newSound: NexusGenRootTypes['Sound'] | null; // Sound
    newVideo: NexusGenRootTypes['Video'] | null; // Video
    putCompanySettings: string | null; // String
    putContactSettings: string | null; // String
    putDomainSettings: NexusGenRootTypes['DomainSettings'] | null; // DomainSettings
    registerUser: string; // String!
    sendWorkEmail: NexusGenRootTypes['Email'] | null; // Email
    simpleUpload: NexusGenScalars['JSON'] | null; // JSON
    togglePublished: NexusGenRootTypes['Post'] | null; // Post
    updateCompany: NexusGenRootTypes['Company'] | null; // Company
    updateContact: NexusGenRootTypes['Contact'] | null; // Contact
    updateDashboard: NexusGenRootTypes['Dashboard'] | null; // Dashboard
    updateDocument: NexusGenRootTypes['Document'] | null; // Document
    updateDrawing: NexusGenRootTypes['Drawing'] | null; // Drawing
    updateEmailTemplate: NexusGenRootTypes['EmailTemplate'] | null; // EmailTemplate
    updateFlow: NexusGenRootTypes['Flow'] | null; // Flow
    updateFunnel: NexusGenRootTypes['Funnel'] | null; // Funnel
    updatePost: NexusGenRootTypes['Post'] | null; // Post
    updatePostType: NexusGenRootTypes['Post'] | null; // Post
    updatePresentation: NexusGenRootTypes['Presentation'] | null; // Presentation
    updatePresentationTemplate: NexusGenRootTypes['PresentationTemplate'] | null; // PresentationTemplate
    updateSheet: NexusGenRootTypes['Sheet'] | null; // Sheet
    updateSound: NexusGenRootTypes['Sound'] | null; // Sound
    updateUser: NexusGenRootTypes['User'] | null; // User
    updateVideo: NexusGenRootTypes['Video'] | null; // Video
  }
  Organization: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    id: string | null; // String
    name: string | null; // String
    owner: NexusGenRootTypes['User'] | null; // User
    projects: Array<NexusGenRootTypes['Project'] | null> | null; // [Project]
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    users: Array<NexusGenRootTypes['User'] | null> | null; // [User]
  }
  Post: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    creator: NexusGenRootTypes['User'] | null; // User
    fields: NexusGenScalars['JSON'] | null; // JSON
    id: string | null; // String
    markdown: string | null; // String
    published: boolean | null; // Boolean
    title: string | null; // String
    type: NexusGenRootTypes['PostType'] | null; // PostType
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  PostType: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    creator: NexusGenRootTypes['User'] | null; // User
    fields: NexusGenScalars['JSON'] | null; // JSON
    id: string | null; // String
    name: string | null; // String
    posts: Array<NexusGenRootTypes['Post'] | null> | null; // [Post]
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  Presentation: { // field return type
    context: NexusGenScalars['JSON'] | null; // JSON
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    creator: NexusGenRootTypes['User'] | null; // User
    id: string | null; // String
    title: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  PresentationTemplate: { // field return type
    context: NexusGenScalars['JSON'] | null; // JSON
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    id: string | null; // String
    key: string | null; // String
    sourceId: string | null; // String
    title: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  Project: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    creator: NexusGenRootTypes['User'] | null; // User
    id: string | null; // String
    organization: NexusGenRootTypes['Organization'] | null; // Organization
    title: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  Query: { // field return type
    authenticate: string | null; // String
    company: NexusGenRootTypes['Company'] | null; // Company
    contact: NexusGenRootTypes['Contact'] | null; // Contact
    contactsByIds: Array<NexusGenRootTypes['Contact'] | null> | null; // [Contact]
    countCompanies: number | null; // Int
    countContacts: number | null; // Int
    countPosts: number | null; // Int
    dashboard: NexusGenRootTypes['Dashboard'] | null; // Dashboard
    document: NexusGenRootTypes['Document'] | null; // Document
    drawing: NexusGenRootTypes['Drawing'] | null; // Drawing
    emailTemplate: NexusGenRootTypes['EmailTemplate'] | null; // EmailTemplate
    flow: NexusGenRootTypes['Flow'] | null; // Flow
    funnel: NexusGenRootTypes['Funnel'] | null; // Funnel
    getCurrentUser: NexusGenRootTypes['User'] | null; // User
    getFileList: NexusGenScalars['JSON'] | null; // JSON
    getGeneratedText: string | null; // String
    getGuideQuestions: NexusGenScalars['JSON'] | null; // JSON
    getPortalUrl: string | null; // String
    getQuestions: NexusGenScalars['JSON'] | null; // JSON
    getRSSData: Array<NexusGenScalars['JSON'] | null> | null; // [JSON]
    getRevisedContent: NexusGenScalars['JSON'] | null; // JSON
    inbox: NexusGenRootTypes['Inbox'] | null; // Inbox
    myCompanies: Array<NexusGenRootTypes['Company'] | null> | null; // [Company]
    myCompanySettings: NexusGenRootTypes['CompanySettings'] | null; // CompanySettings
    myContactSettings: NexusGenRootTypes['ContactSettings'] | null; // ContactSettings
    myContacts: Array<NexusGenRootTypes['Contact'] | null> | null; // [Contact]
    myContentDevelopersSettings: NexusGenRootTypes['ContentDevelopersSettings'] | null; // ContentDevelopersSettings
    myDashboards: Array<NexusGenRootTypes['Dashboard'] | null> | null; // [Dashboard]
    myDocuments: Array<NexusGenRootTypes['Document'] | null> | null; // [Document]
    myDomainSettings: NexusGenRootTypes['DomainSettings'] | null; // DomainSettings
    myDrawings: Array<NexusGenRootTypes['Drawing'] | null> | null; // [Drawing]
    myEmailLogs: Array<NexusGenRootTypes['EmailLog'] | null> | null; // [EmailLog]
    myEmailTemplates: Array<NexusGenRootTypes['EmailTemplate'] | null> | null; // [EmailTemplate]
    myFeeds: Array<NexusGenRootTypes['Feed'] | null> | null; // [Feed]
    myFlows: Array<NexusGenRootTypes['Flow'] | null> | null; // [Flow]
    myFunnels: Array<NexusGenRootTypes['Funnel'] | null> | null; // [Funnel]
    myInboxEmailThreads: Array<NexusGenRootTypes['Thread'] | null> | null; // [Thread]
    myInboxes: Array<NexusGenRootTypes['Inbox'] | null> | null; // [Inbox]
    myOrganizations: Array<NexusGenRootTypes['Organization'] | null> | null; // [Organization]
    myPostTypes: Array<NexusGenRootTypes['PostType'] | null> | null; // [PostType]
    myPosts: Array<NexusGenRootTypes['Post'] | null> | null; // [Post]
    myPresentations: Array<NexusGenRootTypes['Presentation'] | null> | null; // [Presentation]
    mySheets: Array<NexusGenRootTypes['Sheet'] | null> | null; // [Sheet]
    mySounds: Array<NexusGenRootTypes['Sound'] | null> | null; // [Sound]
    myThreadEmails: Array<NexusGenRootTypes['Email'] | null> | null; // [Email]
    myVideos: Array<NexusGenRootTypes['Video'] | null> | null; // [Video]
    myWorkEmailFolderTemplates: Array<NexusGenRootTypes['WorkEmailTemplate'] | null> | null; // [WorkEmailTemplate]
    myWorkEmailFolders: Array<NexusGenRootTypes['WorkEmailFolder'] | null> | null; // [WorkEmailFolder]
    post: NexusGenRootTypes['Post'] | null; // Post
    postType: NexusGenRootTypes['PostType'] | null; // PostType
    presentation: NexusGenRootTypes['Presentation'] | null; // Presentation
    presentationTemplates: Array<NexusGenRootTypes['PresentationTemplate'] | null> | null; // [PresentationTemplate]
    sheet: NexusGenRootTypes['Sheet'] | null; // Sheet
    sound: NexusGenRootTypes['Sound'] | null; // Sound
    video: NexusGenRootTypes['Video'] | null; // Video
    visualData: Array<NexusGenScalars['JSON'] | null> | null; // [JSON]
  }
  Sheet: { // field return type
    context: NexusGenScalars['JSON'] | null; // JSON
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    creator: NexusGenRootTypes['User'] | null; // User
    id: string | null; // String
    title: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  Sound: { // field return type
    context: NexusGenScalars['JSON'] | null; // JSON
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    creator: NexusGenRootTypes['User'] | null; // User
    id: string | null; // String
    title: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  Thread: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    emails: Array<NexusGenRootTypes['Email'] | null> | null; // [Email]
    id: string | null; // String
    inbox: NexusGenRootTypes['Inbox'] | null; // Inbox
    mostRecentEmail: NexusGenRootTypes['Email'] | null; // Email
    subject: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  Type: { // field return type
    code: string | null; // String
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    id: string | null; // String
    name: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  User: { // field return type
    algoliaApiKey: string | null; // String
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    documentTree: NexusGenScalars['JSON'] | null; // JSON
    documents: Array<NexusGenRootTypes['Document'] | null> | null; // [Document]
    drawingFiles: NexusGenScalars['JSON'] | null; // JSON
    email: string | null; // String
    feedTree: NexusGenScalars['JSON'] | null; // JSON
    frequency: string | null; // String
    lastTokenReset: NexusGenScalars['DateTime'] | null; // DateTime
    periodTokenUsage: number | null; // Int
    presentationFiles: NexusGenScalars['JSON'] | null; // JSON
    role: string | null; // String
    sheetFiles: NexusGenScalars['JSON'] | null; // JSON
    soundFiles: NexusGenScalars['JSON'] | null; // JSON
    subscription: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    videoFiles: NexusGenScalars['JSON'] | null; // JSON
  }
  Video: { // field return type
    context: NexusGenScalars['JSON'] | null; // JSON
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    creator: NexusGenRootTypes['User'] | null; // User
    id: string | null; // String
    title: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  WorkEmailFolder: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    creator: NexusGenRootTypes['User'] | null; // User
    id: string | null; // String
    name: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    workEmailTemplates: Array<NexusGenRootTypes['WorkEmailTemplate'] | null> | null; // [WorkEmailTemplate]
  }
  WorkEmailTemplate: { // field return type
    body: string | null; // String
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    id: string | null; // String
    initialMarkdown: string | null; // String
    subject: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    workEmailFolder: NexusGenRootTypes['WorkEmailFolder'] | null; // WorkEmailFolder
  }
}

export interface NexusGenFieldTypeNames {
  Company: { // field return type name
    createdAt: 'DateTime'
    creator: 'User'
    fields: 'JSON'
    id: 'String'
    updatedAt: 'DateTime'
  }
  CompanySettings: { // field return type name
    createdAt: 'DateTime'
    fields: 'JSON'
    id: 'String'
    updatedAt: 'DateTime'
    user: 'User'
  }
  Contact: { // field return type name
    createdAt: 'DateTime'
    creator: 'User'
    fields: 'JSON'
    id: 'String'
    updatedAt: 'DateTime'
  }
  ContactSettings: { // field return type name
    createdAt: 'DateTime'
    fields: 'JSON'
    id: 'String'
    updatedAt: 'DateTime'
    user: 'User'
  }
  ContentDevelopersSettings: { // field return type name
    apiKey: 'String'
    createdAt: 'DateTime'
    id: 'String'
    updatedAt: 'DateTime'
    user: 'User'
  }
  Dashboard: { // field return type name
    context: 'JSON'
    createdAt: 'DateTime'
    creator: 'User'
    id: 'String'
    title: 'String'
    updatedAt: 'DateTime'
  }
  Document: { // field return type name
    content: 'JSON'
    createdAt: 'DateTime'
    creator: 'User'
    html: 'String'
    id: 'String'
    markdown: 'String'
    messages: 'JSON'
    plaintext: 'String'
    title: 'String'
    updatedAt: 'DateTime'
  }
  DomainSettings: { // field return type name
    createdAt: 'DateTime'
    dkimData: 'JSON'
    domainName: 'String'
    id: 'String'
    updatedAt: 'DateTime'
    user: 'User'
  }
  Drawing: { // field return type name
    context: 'JSON'
    createdAt: 'DateTime'
    creator: 'User'
    id: 'String'
    title: 'String'
    updatedAt: 'DateTime'
  }
  Email: { // field return type name
    archived: 'Boolean'
    body: 'String'
    createdAt: 'DateTime'
    draft: 'Boolean'
    from: 'String'
    id: 'String'
    initialMarkdown: 'String'
    subject: 'String'
    thread: 'Thread'
    to: 'String'
    unread: 'Boolean'
    updatedAt: 'DateTime'
  }
  EmailLog: { // field return type name
    createdAt: 'DateTime'
    from: 'String'
    id: 'String'
    sender: 'User'
    template: 'User'
    to: 'String'
    updatedAt: 'DateTime'
  }
  EmailTemplate: { // field return type name
    context: 'JSON'
    createdAt: 'DateTime'
    creator: 'User'
    id: 'String'
    logs: 'User'
    title: 'String'
    updatedAt: 'DateTime'
  }
  Feed: { // field return type name
    createdAt: 'DateTime'
    creator: 'User'
    id: 'String'
    updatedAt: 'DateTime'
    url: 'String'
  }
  Flow: { // field return type name
    createdAt: 'DateTime'
    id: 'String'
    prompt: 'String'
    questionsContext: 'JSON'
    resultsContext: 'JSON'
    type: 'Type'
    updatedAt: 'DateTime'
  }
  Funnel: { // field return type name
    context: 'JSON'
    createdAt: 'DateTime'
    creator: 'User'
    id: 'String'
    title: 'String'
    updatedAt: 'DateTime'
  }
  Inbox: { // field return type name
    createdAt: 'DateTime'
    domain: 'DomainSettings'
    id: 'String'
    threads: 'Thread'
    updatedAt: 'DateTime'
    username: 'String'
  }
  Link: { // field return type name
    createdAt: 'DateTime'
    description: 'String'
    title: 'String'
    updatedAt: 'DateTime'
    url: 'String'
  }
  Mutation: { // field return type name
    createCompany: 'Company'
    createContact: 'Contact'
    createDashboard: 'Dashboard'
    createEmailTemplate: 'EmailTemplate'
    createFile: 'String'
    createFlow: 'Flow'
    createFunnel: 'Funnel'
    createInbox: 'Inbox'
    createOrganization: 'Organization'
    createPost: 'Post'
    createPostType: 'PostType'
    createProject: 'Project'
    createWorkEmailFolder: 'WorkEmailFolder'
    deleteCompany: 'String'
    deleteContact: 'String'
    deleteDocument: 'String'
    deleteDomainSettings: 'String'
    deleteEmailTemplate: 'String'
    deletePost: 'String'
    export: 'String'
    generateContentApiKey: 'ContentDevelopersSettings'
    generateTitles: 'Document'
    markAsRead: 'Email'
    newCheckout: 'String'
    newDocument: 'Document'
    newDrawing: 'Drawing'
    newFeed: 'Feed'
    newPresentation: 'Presentation'
    newPresentationTemplate: 'PresentationTemplate'
    newSheet: 'Sheet'
    newSound: 'Sound'
    newVideo: 'Video'
    putCompanySettings: 'String'
    putContactSettings: 'String'
    putDomainSettings: 'DomainSettings'
    registerUser: 'String'
    sendWorkEmail: 'Email'
    simpleUpload: 'JSON'
    togglePublished: 'Post'
    updateCompany: 'Company'
    updateContact: 'Contact'
    updateDashboard: 'Dashboard'
    updateDocument: 'Document'
    updateDrawing: 'Drawing'
    updateEmailTemplate: 'EmailTemplate'
    updateFlow: 'Flow'
    updateFunnel: 'Funnel'
    updatePost: 'Post'
    updatePostType: 'Post'
    updatePresentation: 'Presentation'
    updatePresentationTemplate: 'PresentationTemplate'
    updateSheet: 'Sheet'
    updateSound: 'Sound'
    updateUser: 'User'
    updateVideo: 'Video'
  }
  Organization: { // field return type name
    createdAt: 'DateTime'
    id: 'String'
    name: 'String'
    owner: 'User'
    projects: 'Project'
    updatedAt: 'DateTime'
    users: 'User'
  }
  Post: { // field return type name
    createdAt: 'DateTime'
    creator: 'User'
    fields: 'JSON'
    id: 'String'
    markdown: 'String'
    published: 'Boolean'
    title: 'String'
    type: 'PostType'
    updatedAt: 'DateTime'
  }
  PostType: { // field return type name
    createdAt: 'DateTime'
    creator: 'User'
    fields: 'JSON'
    id: 'String'
    name: 'String'
    posts: 'Post'
    updatedAt: 'DateTime'
  }
  Presentation: { // field return type name
    context: 'JSON'
    createdAt: 'DateTime'
    creator: 'User'
    id: 'String'
    title: 'String'
    updatedAt: 'DateTime'
  }
  PresentationTemplate: { // field return type name
    context: 'JSON'
    createdAt: 'DateTime'
    id: 'String'
    key: 'String'
    sourceId: 'String'
    title: 'String'
    updatedAt: 'DateTime'
  }
  Project: { // field return type name
    createdAt: 'DateTime'
    creator: 'User'
    id: 'String'
    organization: 'Organization'
    title: 'String'
    updatedAt: 'DateTime'
  }
  Query: { // field return type name
    authenticate: 'String'
    company: 'Company'
    contact: 'Contact'
    contactsByIds: 'Contact'
    countCompanies: 'Int'
    countContacts: 'Int'
    countPosts: 'Int'
    dashboard: 'Dashboard'
    document: 'Document'
    drawing: 'Drawing'
    emailTemplate: 'EmailTemplate'
    flow: 'Flow'
    funnel: 'Funnel'
    getCurrentUser: 'User'
    getFileList: 'JSON'
    getGeneratedText: 'String'
    getGuideQuestions: 'JSON'
    getPortalUrl: 'String'
    getQuestions: 'JSON'
    getRSSData: 'JSON'
    getRevisedContent: 'JSON'
    inbox: 'Inbox'
    myCompanies: 'Company'
    myCompanySettings: 'CompanySettings'
    myContactSettings: 'ContactSettings'
    myContacts: 'Contact'
    myContentDevelopersSettings: 'ContentDevelopersSettings'
    myDashboards: 'Dashboard'
    myDocuments: 'Document'
    myDomainSettings: 'DomainSettings'
    myDrawings: 'Drawing'
    myEmailLogs: 'EmailLog'
    myEmailTemplates: 'EmailTemplate'
    myFeeds: 'Feed'
    myFlows: 'Flow'
    myFunnels: 'Funnel'
    myInboxEmailThreads: 'Thread'
    myInboxes: 'Inbox'
    myOrganizations: 'Organization'
    myPostTypes: 'PostType'
    myPosts: 'Post'
    myPresentations: 'Presentation'
    mySheets: 'Sheet'
    mySounds: 'Sound'
    myThreadEmails: 'Email'
    myVideos: 'Video'
    myWorkEmailFolderTemplates: 'WorkEmailTemplate'
    myWorkEmailFolders: 'WorkEmailFolder'
    post: 'Post'
    postType: 'PostType'
    presentation: 'Presentation'
    presentationTemplates: 'PresentationTemplate'
    sheet: 'Sheet'
    sound: 'Sound'
    video: 'Video'
    visualData: 'JSON'
  }
  Sheet: { // field return type name
    context: 'JSON'
    createdAt: 'DateTime'
    creator: 'User'
    id: 'String'
    title: 'String'
    updatedAt: 'DateTime'
  }
  Sound: { // field return type name
    context: 'JSON'
    createdAt: 'DateTime'
    creator: 'User'
    id: 'String'
    title: 'String'
    updatedAt: 'DateTime'
  }
  Thread: { // field return type name
    createdAt: 'DateTime'
    emails: 'Email'
    id: 'String'
    inbox: 'Inbox'
    mostRecentEmail: 'Email'
    subject: 'String'
    updatedAt: 'DateTime'
  }
  Type: { // field return type name
    code: 'String'
    createdAt: 'DateTime'
    id: 'String'
    name: 'String'
    updatedAt: 'DateTime'
  }
  User: { // field return type name
    algoliaApiKey: 'String'
    createdAt: 'DateTime'
    documentTree: 'JSON'
    documents: 'Document'
    drawingFiles: 'JSON'
    email: 'String'
    feedTree: 'JSON'
    frequency: 'String'
    lastTokenReset: 'DateTime'
    periodTokenUsage: 'Int'
    presentationFiles: 'JSON'
    role: 'String'
    sheetFiles: 'JSON'
    soundFiles: 'JSON'
    subscription: 'String'
    updatedAt: 'DateTime'
    videoFiles: 'JSON'
  }
  Video: { // field return type name
    context: 'JSON'
    createdAt: 'DateTime'
    creator: 'User'
    id: 'String'
    title: 'String'
    updatedAt: 'DateTime'
  }
  WorkEmailFolder: { // field return type name
    createdAt: 'DateTime'
    creator: 'User'
    id: 'String'
    name: 'String'
    updatedAt: 'DateTime'
    workEmailTemplates: 'WorkEmailTemplate'
  }
  WorkEmailTemplate: { // field return type name
    body: 'String'
    createdAt: 'DateTime'
    id: 'String'
    initialMarkdown: 'String'
    subject: 'String'
    updatedAt: 'DateTime'
    workEmailFolder: 'WorkEmailFolder'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    createCompany: { // args
      fields: string; // String!
    }
    createContact: { // args
      fields: string; // String!
    }
    createFile: { // args
      fileId: string; // String!
      flowId: string; // String!
      prompt: string; // String!
    }
    createFlow: { // args
      prompt: string; // String!
      typeCode: string; // String!
    }
    createInbox: { // args
      username: string; // String!
    }
    createOrganization: { // args
      name: string; // String!
    }
    createPost: { // args
      fields?: string | null; // String
      markdown: string; // String!
      postTypeId: string; // String!
      title: string; // String!
    }
    createPostType: { // args
      fields: string; // String!
      name: string; // String!
    }
    createProject: { // args
      organizationId: string; // String!
      title: string; // String!
    }
    createWorkEmailFolder: { // args
      name: string; // String!
    }
    deleteCompany: { // args
      companyId: string; // String!
    }
    deleteContact: { // args
      contactId: string; // String!
    }
    deleteDocument: { // args
      documentId: string; // String!
    }
    deleteEmailTemplate: { // args
      emailTemplateId: string; // String!
    }
    deletePost: { // args
      postId: string; // String!
    }
    export: { // args
      html: string; // String!
      type: string; // String!
    }
    generateTitles: { // args
      treeMd: string; // String!
    }
    markAsRead: { // args
      emailId: string; // String!
    }
    newFeed: { // args
      url: string; // String!
    }
    newPresentationTemplate: { // args
      context: string; // String!
      sourceId: string; // String!
      title: string; // String!
    }
    putCompanySettings: { // args
      fields: string; // String!
    }
    putContactSettings: { // args
      fields: string; // String!
    }
    putDomainSettings: { // args
      domainName: string; // String!
    }
    sendWorkEmail: { // args
      body: string; // String!
      inboxId: string; // String!
      subject: string; // String!
      threadId?: string | null; // String
      to: string; // String!
    }
    simpleUpload: { // args
      fileData?: string | null; // String
      fileName?: string | null; // String
      fileSize?: number | null; // Int
      fileType?: string | null; // String
    }
    togglePublished: { // args
      postId: string; // String!
    }
    updateCompany: { // args
      companyId: string; // String!
      fields: string; // String!
    }
    updateContact: { // args
      contactId: string; // String!
      fields: string; // String!
    }
    updateDashboard: { // args
      context?: string | null; // String
      dashboardId: string; // String!
      title?: string | null; // String
    }
    updateDocument: { // args
      content?: string | null; // String
      documentId: string; // String!
      html?: string | null; // String
      markdown?: string | null; // String
      messages?: string | null; // String
      plaintext?: string | null; // String
      title?: string | null; // String
    }
    updateDrawing: { // args
      context?: string | null; // String
      drawingId: string; // String!
      title?: string | null; // String
    }
    updateEmailTemplate: { // args
      context?: string | null; // String
      emailTemplateId: string; // String!
      title?: string | null; // String
    }
    updateFlow: { // args
      flowId: string; // String!
      questionsContext?: string | null; // String
      resultsContext?: string | null; // String
    }
    updateFunnel: { // args
      context?: string | null; // String
      funnelId: string; // String!
      title?: string | null; // String
    }
    updatePost: { // args
      fields?: string | null; // String
      markdown?: string | null; // String
      postId: string; // String!
      title?: string | null; // String
    }
    updatePostType: { // args
      fields?: string | null; // String
      name?: string | null; // String
      postTypeId: string; // String!
    }
    updatePresentation: { // args
      context?: string | null; // String
      presentationId: string; // String!
      title?: string | null; // String
    }
    updatePresentationTemplate: { // args
      context: string; // String!
      presentationTemplateId: string; // String!
    }
    updateSheet: { // args
      context?: string | null; // String
      sheetId: string; // String!
      title?: string | null; // String
    }
    updateSound: { // args
      context?: string | null; // String
      soundId: string; // String!
      title?: string | null; // String
    }
    updateUser: { // args
      documentTree?: string | null; // String
      drawingFiles?: string | null; // String
      feedTree?: string | null; // String
      presentationFiles?: string | null; // String
      sheetFiles?: string | null; // String
      soundFiles?: string | null; // String
      videoFiles?: string | null; // String
    }
    updateVideo: { // args
      context?: string | null; // String
      title?: string | null; // String
      videoId: string; // String!
    }
  }
  Query: {
    company: { // args
      companyId: string; // String!
    }
    contact: { // args
      contactId: string; // String!
    }
    contactsByIds: { // args
      ids: string[]; // [String!]!
    }
    countPosts: { // args
      postTypeId: string; // String!
    }
    dashboard: { // args
      dashboardId: string; // String!
    }
    document: { // args
      documentId: string; // String!
    }
    drawing: { // args
      drawingId: string; // String!
    }
    emailTemplate: { // args
      emailTemplateId: string; // String!
    }
    flow: { // args
      flowId: string; // String!
    }
    funnel: { // args
      funnelId: string; // String!
    }
    getFileList: { // args
      flowId: string; // String!
    }
    getGeneratedText: { // args
      contextText: string; // String!
    }
    getGuideQuestions: { // args
      fileApp: string; // String!
      fileTitle: string; // String!
      sectionContent: string; // String!
    }
    getQuestions: { // args
      fileApp: string; // String!
      fileTitle: string; // String!
      flowId: string; // String!
      getThis: string; // String!
    }
    getRSSData: { // args
      url: string; // String!
    }
    getRevisedContent: { // args
      fileApp: string; // String!
      fileTitle: string; // String!
      sectionContent: string; // String!
      sectionQuestions: string; // String!
    }
    inbox: { // args
      inboxId: string; // String!
    }
    myCompanies: { // args
      skip: number; // Int!
      take: number; // Int!
    }
    myContacts: { // args
      skip: number; // Int!
      take: number; // Int!
    }
    myEmailLogs: { // args
      skip: number; // Int!
      take: number; // Int!
    }
    myEmailTemplates: { // args
      skip: number; // Int!
      take: number; // Int!
    }
    myInboxEmailThreads: { // args
      inboxId: string; // String!
    }
    myPosts: { // args
      postTypeId: string; // String!
    }
    myThreadEmails: { // args
      threadId: string; // String!
    }
    myWorkEmailFolderTemplates: { // args
      folderId: string; // String!
    }
    post: { // args
      postId: string; // String!
    }
    postType: { // args
      postTypeId: string; // String!
    }
    presentation: { // args
      presentationId: string; // String!
    }
    sheet: { // args
      sheetId: string; // String!
    }
    sound: { // args
      soundId: string; // String!
    }
    video: { // args
      videoId: string; // String!
    }
    visualData: { // args
      field: string; // String!
      item: string; // String!
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = never;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}